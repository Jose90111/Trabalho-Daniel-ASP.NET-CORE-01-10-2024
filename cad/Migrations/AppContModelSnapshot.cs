// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cad.Data;

#nullable disable

namespace cad.Migrations
{
    [DbContext(typeof(AppCont))]
    partial class AppContModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cad.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bairro = "Centro",
                            CEP = "01001-000",
                            Cidade = "São Paulo",
                            Complemento = "Apto 101",
                            Email = "joao@teste.com",
                            Estado = "SP",
                            Logradouro = "Rua A",
                            Nome = "João Silva",
                            Numero = "123",
                            Telefone = "11999999999"
                        },
                        new
                        {
                            Id = 2,
                            Bairro = "Jardim",
                            CEP = "01002-000",
                            Cidade = "São Paulo",
                            Complemento = "",
                            Email = "maria@teste.com",
                            Estado = "SP",
                            Logradouro = "Rua B",
                            Nome = "Maria Souza",
                            Numero = "456",
                            Telefone = "11988888888"
                        },
                        new
                        {
                            Id = 3,
                            Bairro = "Vila Mariana",
                            CEP = "01003-000",
                            Cidade = "São Paulo",
                            Complemento = "Bloco B",
                            Email = "carlos@teste.com",
                            Estado = "SP",
                            Logradouro = "Rua C",
                            Nome = "Carlos Lima",
                            Numero = "789",
                            Telefone = "11977777777"
                        },
                        new
                        {
                            Id = 4,
                            Bairro = "Liberdade",
                            CEP = "01004-000",
                            Cidade = "São Paulo",
                            Complemento = "Casa 2",
                            Email = "ana@teste.com",
                            Estado = "SP",
                            Logradouro = "Rua D",
                            Nome = "Ana Costa",
                            Numero = "101",
                            Telefone = "11966666666"
                        },
                        new
                        {
                            Id = 5,
                            Bairro = "Santa Cecília",
                            CEP = "01005-000",
                            Cidade = "São Paulo",
                            Complemento = "",
                            Email = "pedro@teste.com",
                            Estado = "SP",
                            Logradouro = "Rua E",
                            Nome = "Pedro Marques",
                            Numero = "202",
                            Telefone = "11955555555"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
